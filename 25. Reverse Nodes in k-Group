/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode* check=head;
        int n=0;
        for(int i=0;i<k;i++){
            if(check==NULL){
                return head;
            }else{
                check=check->next;
            }
        }
        ListNode* prev=NULL;
        ListNode* current=head;
        ListNode* next;

        while(current!=NULL&&n<k){
            next=current->next;
            current->next=prev;
            prev=current;
            current=next;
            n++;
        }
        
        if(next!=NULL){
            head->next=reverseKGroup(next,k);
        }
        return prev;
    }
};
